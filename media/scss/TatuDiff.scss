$background: #111;
$backgroundLight: #FFF;
$border: #222;
$borderLight: rgb(233, 233, 233);
$foreground: #fff;
$state-ok: rgb(75, 216, 75);
$state-ok-light: rgb(15, 139, 15);
$state-ok-bg: rgba($state-ok, .2);
$state-ok-bg-light: rgb(235, 250, 235);
$state-warning: rgb(221, 173, 17);
$state-warning-light: rgb(122, 96, 9);
$state-warning-bg: rgba($state-warning, .2);
$state-warning-bg-light: rgb(255, 250, 228);
$state-error: rgb(207, 27, 27);
$state-error-bg: rgba($state-error, .2);
$state-error-bg-light: rgb(255, 236, 236);

body,
html {
	margin: 0;
	padding: 0;
	background-color: $background;
	color: var(--vscode-editor-foreground);
	width: 100%;
	min-height: 100%;
}

#diffWindow {
	width: 100%;
	height: 100%;
	min-width: 100%;
	min-height: 100%;
	font-size: 13px;
	> table {
		width: 100%;
		tr {
			
		}
		.replace,
		.delete,
		.insert {
			cursor: pointer;
		}
		th {
			&:nth-child(1),
			&:nth-child(3) {
				width: 20px;
			}
		}
	}
}

[contenteditable="true"] {
	outline: none !important;
}

.diff {
	border-collapse:collapse;
	border:1px solid $border;
	white-space: pre-wrap;
	max-width: 100%;
	word-break: break-all;
	display: flex;
	flex-wrap: wrap;
	> * {
		flex: 1 0 auto;
		width: 50%;
		max-width: 50%;
		overflow: auto;
		max-height: 100%;
		display: grid;
		.line {
			min-height: 1.7em;
			line-height: 1.7em;
		}
		.equal {
			background: var(--vscode-editor-background);
			color: var(--vscode-editor-foreground);
		}
		
		.empty {
			background-color: darken($background, 5%);
		}
		.replace {
			background-color: $background;
			.ins {
				background: $state-ok-bg;
				color: $state-ok;
			}
			.dell {
				background: $state-error-bg;
				color: $state-error;
			}
		}
		.delete {
			background-color: $state-error-bg;
			position: relative;
			&::after {
				content: '-';
				color: $state-error;
				opacity: 1;
			}
			.dell {
				background: $state-error-bg;
			}
		}
		.skip {
			background-color: $background;
			border: 1px solid $border;
			border-right: 1px solid $border;
		}
		.insert {
			background-color: $state-ok-bg;
			position: relative;
			.ins {
				background: $state-ok-bg;
			}
			&::after {
				content: '+';
				color: $state-ok;
				opacity: 1;
			}
		}
		.merged {
			span {
				&:first-of-type {
					&::after {
						content: 'M';
						color: $state-warning;
						opacity: 1;
					}
				}
			}
		}
		> div {
			white-space: nowrap;
			display: flex;
			width: 100%;
			&.selected {
				> span {
					position: relative;
					&:not(.insert):not(.merged):not(.delete):not(.replace):not(.skip):not(.empty) {
						background-color: $background;
					}
					&:first-child {
						&::before {
							content: '';
							position: absolute;
							left: 0;
							bottom: 0;
							top: 0;
							width: 3px;
							background-color: var(--vscode-editorLineNumber-foreground);
							z-index: 2;
							opacity: 0.3;
						}
					}
				}
			}
			&.empty {
				display: none;
			}
			> span {
				flex: 1 0 auto;
				&:first-child {
					width: 33px;
					max-width: 33px !important;
				}
				&:last-child {
					white-space: pre;
					width: calc(100% - 33px);
				}
			}
		}
	}
	> .title-bar {
		width: 100%;
		max-width: 100%;
		overflow: hidden;
		display: flex;
		background-color: $background;
		z-index: 2;
		> * {
			flex: 1 0 auto;
			width: 50%;
			max-width: 50%;
			padding: 7px 10px;
			color: var(--vscode-editor-foreground) !important;
			font-family: var(--vscode-font-family);
			font-size: var(--vscode-font-size);
			font-weight: var(--vscode-font-weight);
		}
	}
	> div {
		font-family:  var(--vscode-editor-font-family);
		* {
			user-select: none;
			-moz-user-select: none;
		}
		> div {
			> span {
				&:first-child {
					font-family: var(--vscode-editor-font-family);
					background: var(--vscode-editor-background);
					font-size: var(--vscode-editor-font-size);
					font-weight: var(--vscode-editor-font-weight);
					border: none;
					color: var(--vscode-editorLineNumber-foreground);
					padding: 0;
					text-align:right;
					vertical-align:top;
					max-width: 50%;
					word-break: normal;
				}
				&:last-child {
					padding:0 .4em;
					//padding-top:.4em;
					vertical-align:top;
					color: var(--vscode-editor-foreground);
					font-family: var(--vscode-editor-font-family);
					// background: var(--vscode-editor-background);
					font-size: var(--vscode-editor-font-size);
					font-weight: var(--vscode-editor-font-weight);
				}
			}
		}
		// td {
			
		// 	&::before {
		// 		content: '';
		// 		position: absolute;
		// 		left: 5px;
		// 		transition: all	200ms ease;
		// 		opacity: 0;
		// 	}
		// 	&::after {
		// 		content: '';
		// 		position: absolute;
		// 		right: 5px;
		// 		transition: all	200ms ease;
		// 		opacity: 0;
		// 	}
		// }
	}
	// thead {
	// 	border-bottom:1px solid $border;
	// 	th {
	// 		background: var(--vscode-input-background);
	// 		position: sticky;
	// 		top: 26px;
	// 		z-index: 2;
	// 	}
	// 	// font-family: $font;
	// 	th.texttitle {
	// 		text-align: left;
	// 		padding-top: 4px;
	// 		padding-bottom: 6px;
	// 		color: var(--vscode-editor-foreground) !important;
	// 		font-family: var(--vscode-font-family);
	// 		font-size: var(--vscode-font-size);
	// 		font-weight: var(--vscode-font-weight);
	// 	}
	// }

	.saved {
		animation-name: saved;
		animation-duration: 800ms;
		animation-iteration-count: 1;
		animation-fill-mode: forwards;
		td, th {
			position: relative;
			&::before {
				content: '';
				position: absolute;
				left: 0;
				width: 100%;
				top: 0;
				bottom: 0;
				text-align: center;
				color:  $state-ok;
				z-index: 2;
				display: block;
				background-color: $state-ok-bg;
				line-height: 1.7;
				font-weight: bold;
				opacity: 1;
			}
		}
	}
	
	
}

#right-side {
	position: relative;
	&::before {
		content: '';
		position: absolute;
		left: 0;
		top: 0;
		bottom: 0;
		width: 1px;
		background-color: $background;
	}
}

.control-box {
	display: flex;
	width: 100%;
	position: sticky;
	top: 0;
	background-color: var(--vscode-sideBar-background);
	font-size: 13px;
	z-index: 3;
	visibility: visible;
	height: 27px;
	* {
		box-sizing: border-box;
	}
	.changes-box {
		flex: 1 0 25%;
		max-width: 280px;
		font-size: 0;
		display: flex;
		padding-left: 5px;
		> div {
			flex: 1 0 auto;
			display: inline-block;
			vertical-align: top;
			padding: 2px 8px;
			font-size: 13px;
			border-radius: 11px;
			align-self: center;
			+ div {
				margin-left: 7px;
			}
			span {
				font-weight: bold;
				float: right;
				border-radius: 13px;
				padding: 0 5px;
				margin-right: -6px;
			}
			&#changed {
				background-color: $state-warning;
				color: $background;
				span {
					background-color: lighten($color: $state-warning, $amount: 17%);
				}
			}
			&#inserted {
				background-color: $state-ok;
				color: $background;
				span {
					background-color: lighten($color: $state-ok, $amount: 17%);
				}
			}
			&#deleted {
				background-color: $state-error;
				color: $background;
				span {
					background-color: lighten($color: $state-error, $amount: 17%);
				}
			}
		}
	}
	.controls {
		flex: 1 0 auto;
		// display: flex;
		// flex-wrap: wrap;
		display: flex;
		padding-left: 15px;
		button {
			// flex: 1 0 50%;
			// display: flex;
			// justify-content: center;
			// align-items: center;
			// flex-direction: column;
			display: inline-block;
			background-color: var(--vscode-sideBar-background);
			border: 1px solid var(--vscode-sideBar-background);
			color: var(--vscode-sideBar-foreground);
			position: relative;
			&:disabled {
				opacity: 0.6;
			}
			&:focus {
				outline: none;
			}
			+ button {
				margin-left: 5px;
			}
		}
	}
}

#info_window {
	position: fixed;
	top: 0;
	width: 500px;
	padding: 0 1rem;
	z-index: 88;
	background-color: $background;
	left: 0;
	right: 0;
	margin-left: auto;
	margin-right: auto;
	transition: top 300ms ease, opacity 300ms ease;
	opacity: 0;
	max-height: 0;
	overflow: hidden;
	&.open {
		opacity: 1;
		top: 50px;
		padding: 1.5rem 1rem 1rem;
		max-height: none;
	}
	th,
	td {
		padding: 2px;
		text-align: left;
	}
	#close_info {
		position: absolute;
		right: 5px;
		top: 10px;
		background-color: transparent;
		border: none;
		&:focus {
			outline: none;
		}
	}
	svg {
		fill: $foreground;
	}
	.kdb,
	.kbd {
		display: inline-block;
		vertical-align: top;
		border: 1px solid $foreground;
		border-radius: 3px;
		padding: 0 3px;
	}
}

body.vscode-light {
	background: $backgroundLight;
	#diffWindow {
		> table {
			tr {
				&.selected {
					th,
					td {
						&:not(.insert):not(.merged):not(.delete):not(.replace):not(.skip):not(.empty) {
							background-color: darken($backgroundLight, 2%);
						}
					}
				}
			}
		}
	}
	.diff {
		border-color: $borderLight;
		thead {
			border-color: $borderLight;
			th {
				background: var(--vscode-editor-lineHighlightBackground, #FFF);
				&.texttitle {
					color: var(--vscode-editor-foreground, #111) !important;
					.hljs-title.class_ {
						color: var(--vscode-editor-foreground, #111) !important;

						
					}
				}
			}
		}
		.empty {
			background-color: darken($backgroundLight, 5%);
		}
		.replace {
			background-color: darken($color: $backgroundLight, $amount: 5%);
			.ins {
				background: $state-ok-bg;
				color: $state-ok-light;
			}
			.dell {
				background: $state-error-bg;
				color: $state-error;
			}
		}
		.delete {
			background-color: $state-error-bg-light;
			.dell {
				background: darken($color: $state-error-bg-light, $amount: 5%);
			}
		}
		.skip {
			background-color: darken($backgroundLight, 5%);
			border: 1px solid $borderLight;
			border-right: 1px solid $borderLight;
		}
		.insert {
			background-color: $state-ok-bg-light;
			// color: $state-ok-light;
			.ins {
				background: darken($color: $state-ok-bg-light, $amount: 5%);
			}
			&::after {
				content: '+';
				color: $state-ok;
				opacity: 1;
			}
		}
		.merged {
			td,
			th {
				background-color: darken($backgroundLight, 1%);
			}
		}
	}
	.control-box {
		box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
		border: 1px solid $borderLight;
		.changes-box {
			> div {
				&#changed {
					background-color: $state-warning-bg-light;
					span {
						background-color: darken($color: $state-warning-bg-light, $amount: 17%);
					}

				}
				&#inserted {
					background-color: $state-ok-bg-light;
					span {
						background-color: darken($color: $state-ok-bg-light, $amount: 17%);
					}
				}
				&#deleted {
					background-color: $state-error-bg-light;
					span {
						background-color: darken($color: $state-error-bg-light, $amount: 17%);
					}
				}
			}
		}
	}

	#info_window {
		background-color: $backgroundLight;
		svg {
			fill: $background;
		}
		.kbd,
		.kdb {
			border-color: $background;
		}
	}
}



 
@keyframes saved {
	0% {
		transform: scale(1.05);
	}
	100% {
		transform: scale(1);
	}
}