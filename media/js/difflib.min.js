var __whitespace={" ":!0,"\t":!0,"\n":!0,"\f":!0,"\r":!0},difflib={defaultJunkFunction:function(c){return __whitespace.hasOwnProperty(c)},stripLinebreaks:function(str){return str.replace(/^[\n\r]*|[\n\r]*$/g,"")},stringAsLines:function(str){for(var lfpos=str.indexOf("\n"),crpos=str.indexOf("\r"),linebreak=lfpos>-1&&crpos>-1||crpos<0?"\n":"\r",lines=str.split(linebreak),i=0;i<lines.length;i++)lines[i]=difflib.stripLinebreaks(lines[i]);return lines},__reduce:function(func,list,initial){var value,idx;if(null!=initial)value=initial,idx=0;else{if(!list)return null;value=list[0],idx=1}for(;idx<list.length;idx++)value=func(value,list[idx]);return value},__ntuplecomp:function(a,b){for(var mlen=Math.max(a.length,b.length),i=0;i<mlen;i++){if(a[i]<b[i])return-1;if(a[i]>b[i])return 1}return a.length==b.length?0:a.length<b.length?-1:1},__calculate_ratio:function(matches,length){return length?2*matches/length:1},__isindict:function(dict){return function(key){return dict.hasOwnProperty(key)}},__dictget:function(dict,key,defaultValue){return dict.hasOwnProperty(key)?dict[key]:defaultValue},SequenceMatcher:function(a,b,isjunk){this.set_seqs=function(a,b){this.set_seq1(a),this.set_seq2(b)},this.set_seq1=function(a){a!=this.a&&(this.a=a,this.matching_blocks=this.opcodes=null)},this.set_seq2=function(b){b!=this.b&&(this.b=b,this.matching_blocks=this.opcodes=this.fullbcount=null,this.__chain_b())},this.__chain_b=function(){for(var b=this.b,n=b.length,b2j=this.b2j={},populardict={},i=0;i<b.length;i++){var elt=b[i];if(b2j.hasOwnProperty(elt)){var indices=b2j[elt];n>=200&&100*indices.length>n?(populardict[elt]=1,delete b2j[elt]):indices.push(i)}else b2j[elt]=[i]}for(var elt in populardict)populardict.hasOwnProperty(elt)&&delete b2j[elt];var isjunk=this.isjunk,junkdict={};if(isjunk){for(var elt in populardict)populardict.hasOwnProperty(elt)&&isjunk(elt)&&(junkdict[elt]=1,delete populardict[elt]);for(var elt in b2j)b2j.hasOwnProperty(elt)&&isjunk(elt)&&(junkdict[elt]=1,delete b2j[elt])}this.isbjunk=difflib.__isindict(junkdict),this.isbpopular=difflib.__isindict(populardict)},this.find_longest_match=function(alo,ahi,blo,bhi){for(var a=this.a,b=this.b,b2j=this.b2j,isbjunk=this.isbjunk,besti=alo,bestj=blo,bestsize=0,j=null,k,j2len={},nothing=[],i=alo;i<ahi;i++){var newj2len={},jdict=difflib.__dictget(b2j,a[i],nothing);for(var jkey in jdict)if(jdict.hasOwnProperty(jkey)){if((j=jdict[jkey])<blo)continue;if(j>=bhi)break;newj2len[j]=k=difflib.__dictget(j2len,j-1,0)+1,k>bestsize&&(besti=i-k+1,bestj=j-k+1,bestsize=k)}j2len=newj2len}for(;besti>alo&&bestj>blo&&!isbjunk(b[bestj-1])&&a[besti-1]==b[bestj-1];)besti--,bestj--,bestsize++;for(;besti+bestsize<ahi&&bestj+bestsize<bhi&&!isbjunk(b[bestj+bestsize])&&a[besti+bestsize]==b[bestj+bestsize];)bestsize++;for(;besti>alo&&bestj>blo&&isbjunk(b[bestj-1])&&a[besti-1]==b[bestj-1];)besti--,bestj--,bestsize++;for(;besti+bestsize<ahi&&bestj+bestsize<bhi&&isbjunk(b[bestj+bestsize])&&a[besti+bestsize]==b[bestj+bestsize];)bestsize++;return[besti,bestj,bestsize]},this.get_matching_blocks=function(){if(null!=this.matching_blocks)return this.matching_blocks;for(var la=this.a.length,lb=this.b.length,queue=[[0,la,0,lb]],matching_blocks=[],alo,ahi,blo,bhi,qi,i,j,k,x;queue.length;)alo=(qi=queue.pop())[0],ahi=qi[1],blo=qi[2],bhi=qi[3],i=(x=this.find_longest_match(alo,ahi,blo,bhi))[0],j=x[1],(k=x[2])&&(matching_blocks.push(x),alo<i&&blo<j&&queue.push([alo,i,blo,j]),i+k<ahi&&j+k<bhi&&queue.push([i+k,ahi,j+k,bhi]));matching_blocks.sort(difflib.__ntuplecomp);var i1=0,j1=0,k1=0,block=0,i2,j2,k2,non_adjacent=[];for(var idx in matching_blocks)matching_blocks.hasOwnProperty(idx)&&(i2=(block=matching_blocks[idx])[0],j2=block[1],k2=block[2],i1+k1==i2&&j1+k1==j2?k1+=k2:(k1&&non_adjacent.push([i1,j1,k1]),i1=i2,j1=j2,k1=k2));return k1&&non_adjacent.push([i1,j1,k1]),non_adjacent.push([la,lb,0]),this.matching_blocks=non_adjacent,this.matching_blocks},this.get_opcodes=function(){if(null!=this.opcodes)return this.opcodes;var i=0,j=0,answer=[];this.opcodes=answer;var block,ai,bj,size,tag,blocks=this.get_matching_blocks();for(var idx in blocks)blocks.hasOwnProperty(idx)&&(ai=(block=blocks[idx])[0],bj=block[1],size=block[2],tag="",i<ai&&j<bj?tag="replace":i<ai?tag="delete":j<bj&&(tag="insert"),tag&&answer.push([tag,i,ai,j,bj]),i=ai+size,j=bj+size,size&&answer.push(["equal",ai,i,bj,j]));return answer},this.get_grouped_opcodes=function(n){n||(n=3);var codes=this.get_opcodes(),code,tag,i1,i2,j1,j2;codes||(codes=[["equal",0,1,0,1]]),"equal"==codes[0][0]&&(tag=(code=codes[0])[0],i1=code[1],i2=code[2],j1=code[3],j2=code[4],codes[0]=[tag,Math.max(i1,i2-n),i2,Math.max(j1,j2-n),j2]),"equal"==codes[codes.length-1][0]&&(tag=(code=codes[codes.length-1])[0],i1=code[1],i2=code[2],j1=code[3],j2=code[4],codes[codes.length-1]=[tag,i1,Math.min(i2,i1+n),j1,Math.min(j2,j1+n)]);var nn=n+n,group=[],groups=[];for(var idx in codes)codes.hasOwnProperty(idx)&&(tag=(code=codes[idx])[0],i1=code[1],i2=code[2],j1=code[3],j2=code[4],"equal"==tag&&i2-i1>nn&&(group.push([tag,i1,Math.min(i2,i1+n),j1,Math.min(j2,j1+n)]),groups.push(group),group=[],i1=Math.max(i1,i2-n),j1=Math.max(j1,j2-n)),group.push([tag,i1,i2,j1,j2]));return!group||1==group.length&&"equal"==group[0][0]||groups.push(group),groups},this.ratio=function(){return matches=difflib.__reduce((function(sum,triple){return sum+triple[triple.length-1]}),this.get_matching_blocks(),0),difflib.__calculate_ratio(matches,this.a.length+this.b.length)},this.quick_ratio=function(){var fullbcount,elt;if(null==this.fullbcount){this.fullbcount=fullbcount={};for(var i=0;i<this.b.length;i++)fullbcount[elt=this.b[i]]=difflib.__dictget(fullbcount,elt,0)+1}fullbcount=this.fullbcount;for(var avail={},availhas=difflib.__isindict(avail),matches=numb=0,i=0;i<this.a.length;i++)availhas(elt=this.a[i])?numb=avail[elt]:numb=difflib.__dictget(fullbcount,elt,0),avail[elt]=numb-1,numb>0&&matches++;return difflib.__calculate_ratio(matches,this.a.length+this.b.length)},this.real_quick_ratio=function(){var la=this.a.length,lb=this.b.length;return _calculate_ratio(Math.min(la,lb),la+lb)},this.isjunk=isjunk||difflib.defaultJunkFunction,this.a=this.b=null,this.set_seqs(a,b)}};