 /** media/js/diff_match_patch.min.js **/ var diff_match_patch=function(){this.Diff_Timeout=1,this.Diff_EditCost=4,this.Match_Threshold=.5,this.Match_Distance=1e3,this.Patch_DeleteThreshold=.5,this.Patch_Margin=4,this.Match_MaxBits=32},DIFF_DELETE=-1,DIFF_INSERT=1,DIFF_EQUAL=0;diff_match_patch.Diff=function(op,text){this[0]=op,this[1]=text},diff_match_patch.Diff.prototype.length=2,diff_match_patch.Diff.prototype.toString=function(){return this[0]+","+this[1]},diff_match_patch.prototype.diff_main=function(text1,text2,opt_checklines,opt_deadline){void 0===opt_deadline&&(opt_deadline=this.Diff_Timeout<=0?Number.MAX_VALUE:(new Date).getTime()+1e3*this.Diff_Timeout);var deadline=opt_deadline;if(null==text1||null==text2)throw new Error("Null input. (diff_main)");if(text1==text2)return text1?[new diff_match_patch.Diff(DIFF_EQUAL,text1)]:[];void 0===opt_checklines&&(opt_checklines=!0);var checklines=opt_checklines,commonlength=this.diff_commonPrefix(text1,text2),commonprefix=text1.substring(0,commonlength);text1=text1.substring(commonlength),text2=text2.substring(commonlength),commonlength=this.diff_commonSuffix(text1,text2);var commonsuffix=text1.substring(text1.length-commonlength);text1=text1.substring(0,text1.length-commonlength),text2=text2.substring(0,text2.length-commonlength);var diffs=this.diff_compute_(text1,text2,checklines,deadline);return commonprefix&&diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL,commonprefix)),commonsuffix&&diffs.push(new diff_match_patch.Diff(DIFF_EQUAL,commonsuffix)),this.diff_cleanupMerge(diffs),diffs},diff_match_patch.prototype.diff_compute_=function(text1,text2,checklines,deadline){var diffs;if(!text1)return[new diff_match_patch.Diff(DIFF_INSERT,text2)];if(!text2)return[new diff_match_patch.Diff(DIFF_DELETE,text1)];var longtext=text1.length>text2.length?text1:text2,shorttext=text1.length>text2.length?text2:text1,i=longtext.indexOf(shorttext);if(-1!=i)return diffs=[new diff_match_patch.Diff(DIFF_INSERT,longtext.substring(0,i)),new diff_match_patch.Diff(DIFF_EQUAL,shorttext),new diff_match_patch.Diff(DIFF_INSERT,longtext.substring(i+shorttext.length))],text1.length>text2.length&&(diffs[0][0]=diffs[2][0]=DIFF_DELETE),diffs;if(1==shorttext.length)return[new diff_match_patch.Diff(DIFF_DELETE,text1),new diff_match_patch.Diff(DIFF_INSERT,text2)];var hm=this.diff_halfMatch_(text1,text2);if(hm){var text1_a=hm[0],text1_b=hm[1],text2_a=hm[2],text2_b=hm[3],mid_common=hm[4],diffs_a=this.diff_main(text1_a,text2_a,checklines,deadline),diffs_b=this.diff_main(text1_b,text2_b,checklines,deadline);return diffs_a.concat([new diff_match_patch.Diff(DIFF_EQUAL,mid_common)],diffs_b)}return checklines&&text1.length>100&&text2.length>100?this.diff_lineMode_(text1,text2,deadline):this.diff_bisect_(text1,text2,deadline)},diff_match_patch.prototype.diff_lineMode_=function(text1,text2,deadline){var a=this.diff_linesToChars_(text1,text2);text1=a.chars1,text2=a.chars2;var linearray=a.lineArray,diffs=this.diff_main(text1,text2,!1,deadline);this.diff_charsToLines_(diffs,linearray),this.diff_cleanupSemantic(diffs),diffs.push(new diff_match_patch.Diff(DIFF_EQUAL,""));for(var pointer=0,count_delete=0,count_insert=0,text_delete="",text_insert="";pointer<diffs.length;){switch(diffs[pointer][0]){case DIFF_INSERT:count_insert++,text_insert+=diffs[pointer][1];break;case DIFF_DELETE:count_delete++,text_delete+=diffs[pointer][1];break;case DIFF_EQUAL:if(count_delete>=1&&count_insert>=1){diffs.splice(pointer-count_delete-count_insert,count_delete+count_insert),pointer=pointer-count_delete-count_insert;for(var subDiff=this.diff_main(text_delete,text_insert,!1,deadline),j=subDiff.length-1;j>=0;j--)diffs.splice(pointer,0,subDiff[j]);pointer+=subDiff.length}count_insert=0,count_delete=0,text_delete="",text_insert=""}pointer++}return diffs.pop(),diffs},diff_match_patch.prototype.diff_bisect_=function(text1,text2,deadline){for(var text1_length=text1.length,text2_length=text2.length,max_d=Math.ceil((text1_length+text2_length)/2),v_offset=max_d,v_length=2*max_d,v1=new Array(v_length),v2=new Array(v_length),x=0;x<v_length;x++)v1[x]=-1,v2[x]=-1;v1[v_offset+1]=0,v2[v_offset+1]=0;for(var delta=text1_length-text2_length,front=delta%2!=0,k1start=0,k1end=0,k2start=0,k2end=0,d=0;d<max_d&&!((new Date).getTime()>deadline);d++){for(var k1=-d+k1start;k1<=d-k1end;k1+=2){for(var k1_offset=v_offset+k1,x1,y1=(x1=k1==-d||k1!=d&&v1[k1_offset-1]<v1[k1_offset+1]?v1[k1_offset+1]:v1[k1_offset-1]+1)-k1;x1<text1_length&&y1<text2_length&&text1.charAt(x1)==text2.charAt(y1);)x1++,y1++;if(v1[k1_offset]=x1,x1>text1_length)k1end+=2;else if(y1>text2_length)k1start+=2;else if(front){var k2_offset,x2;if((k2_offset=v_offset+delta-k1)>=0&&k2_offset<v_length&&-1!=v2[k2_offset])if(x1>=(x2=text1_length-v2[k2_offset]))return this.diff_bisectSplit_(text1,text2,x1,y1,deadline)}}for(var k2=-d+k2start;k2<=d-k2end;k2+=2){for(var k2_offset=v_offset+k2,x2,y2=(x2=k2==-d||k2!=d&&v2[k2_offset-1]<v2[k2_offset+1]?v2[k2_offset+1]:v2[k2_offset-1]+1)-k2;x2<text1_length&&y2<text2_length&&text1.charAt(text1_length-x2-1)==text2.charAt(text2_length-y2-1);)x2++,y2++;if(v2[k2_offset]=x2,x2>text1_length)k2end+=2;else if(y2>text2_length)k2start+=2;else if(!front){var k1_offset;if((k1_offset=v_offset+delta-k2)>=0&&k1_offset<v_length&&-1!=v1[k1_offset]){var x1,y1=v_offset+(x1=v1[k1_offset])-k1_offset;if(x1>=(x2=text1_length-x2))return this.diff_bisectSplit_(text1,text2,x1,y1,deadline)}}}}return[new diff_match_patch.Diff(DIFF_DELETE,text1),new diff_match_patch.Diff(DIFF_INSERT,text2)]},diff_match_patch.prototype.diff_bisectSplit_=function(text1,text2,x,y,deadline){var text1a=text1.substring(0,x),text2a=text2.substring(0,y),text1b=text1.substring(x),text2b=text2.substring(y),diffs=this.diff_main(text1a,text2a,!1,deadline),diffsb=this.diff_main(text1b,text2b,!1,deadline);return diffs.concat(diffsb)},diff_match_patch.prototype.diff_linesToChars_=function(text1,text2){var lineArray=[],lineHash={};function diff_linesToCharsMunge_(text){for(var chars="",lineStart=0,lineEnd=-1,lineArrayLength=lineArray.length;lineEnd<text.length-1;){-1==(lineEnd=text.indexOf("\n",lineStart))&&(lineEnd=text.length-1);var line=text.substring(lineStart,lineEnd+1);(lineHash.hasOwnProperty?lineHash.hasOwnProperty(line):void 0!==lineHash[line])?chars+=String.fromCharCode(lineHash[line]):(lineArrayLength==maxLines&&(line=text.substring(lineStart),lineEnd=text.length),chars+=String.fromCharCode(lineArrayLength),lineHash[line]=lineArrayLength,lineArray[lineArrayLength++]=line),lineStart=lineEnd+1}return chars}lineArray[0]="";var maxLines=4e4,chars1=diff_linesToCharsMunge_(text1),chars2;return maxLines=65535,{chars1:chars1,chars2:diff_linesToCharsMunge_(text2),lineArray:lineArray}},diff_match_patch.prototype.diff_charsToLines_=function(diffs,lineArray){for(var i=0;i<diffs.length;i++){for(var chars=diffs[i][1],text=[],j=0;j<chars.length;j++)text[j]=lineArray[chars.charCodeAt(j)];diffs[i][1]=text.join("")}},diff_match_patch.prototype.diff_commonPrefix=function(text1,text2){if(!text1||!text2||text1.charAt(0)!=text2.charAt(0))return 0;for(var pointermin=0,pointermax=Math.min(text1.length,text2.length),pointermid=pointermax,pointerstart=0;pointermin<pointermid;)text1.substring(pointerstart,pointermid)==text2.substring(pointerstart,pointermid)?pointerstart=pointermin=pointermid:pointermax=pointermid,pointermid=Math.floor((pointermax-pointermin)/2+pointermin);return pointermid},diff_match_patch.prototype.diff_commonSuffix=function(text1,text2){if(!text1||!text2||text1.charAt(text1.length-1)!=text2.charAt(text2.length-1))return 0;for(var pointermin=0,pointermax=Math.min(text1.length,text2.length),pointermid=pointermax,pointerend=0;pointermin<pointermid;)text1.substring(text1.length-pointermid,text1.length-pointerend)==text2.substring(text2.length-pointermid,text2.length-pointerend)?pointerend=pointermin=pointermid:pointermax=pointermid,pointermid=Math.floor((pointermax-pointermin)/2+pointermin);return pointermid},diff_match_patch.prototype.diff_commonOverlap_=function(text1,text2){var text1_length=text1.length,text2_length=text2.length;if(0==text1_length||0==text2_length)return 0;text1_length>text2_length?text1=text1.substring(text1_length-text2_length):text1_length<text2_length&&(text2=text2.substring(0,text1_length));var text_length=Math.min(text1_length,text2_length);if(text1==text2)return text_length;for(var best=0,length=1;;){var pattern=text1.substring(text_length-length),found=text2.indexOf(pattern);if(-1==found)return best;length+=found,0!=found&&text1.substring(text_length-length)!=text2.substring(0,length)||(best=length,length++)}},diff_match_patch.prototype.diff_halfMatch_=function(text1,text2){if(this.Diff_Timeout<=0)return null;var longtext=text1.length>text2.length?text1:text2,shorttext=text1.length>text2.length?text2:text1;if(longtext.length<4||2*shorttext.length<longtext.length)return null;var dmp=this;function diff_halfMatchI_(longtext,shorttext,i){for(var seed=longtext.substring(i,i+Math.floor(longtext.length/4)),j=-1,best_common="",best_longtext_a,best_longtext_b,best_shorttext_a,best_shorttext_b;-1!=(j=shorttext.indexOf(seed,j+1));){var prefixLength=dmp.diff_commonPrefix(longtext.substring(i),shorttext.substring(j)),suffixLength=dmp.diff_commonSuffix(longtext.substring(0,i),shorttext.substring(0,j));best_common.length<suffixLength+prefixLength&&(best_common=shorttext.substring(j-suffixLength,j)+shorttext.substring(j,j+prefixLength),best_longtext_a=longtext.substring(0,i-suffixLength),best_longtext_b=longtext.substring(i+prefixLength),best_shorttext_a=shorttext.substring(0,j-suffixLength),best_shorttext_b=shorttext.substring(j+prefixLength))}return 2*best_common.length>=longtext.length?[best_longtext_a,best_longtext_b,best_shorttext_a,best_shorttext_b,best_common]:null}var hm1=diff_halfMatchI_(longtext,shorttext,Math.ceil(longtext.length/4)),hm2=diff_halfMatchI_(longtext,shorttext,Math.ceil(longtext.length/2)),hm,text1_a,text1_b,text2_a,text2_b,mid_common;return hm1||hm2?(hm=hm2?hm1&&hm1[4].length>hm2[4].length?hm1:hm2:hm1,text1.length>text2.length?(text1_a=hm[0],text1_b=hm[1],text2_a=hm[2],text2_b=hm[3]):(text2_a=hm[0],text2_b=hm[1],text1_a=hm[2],text1_b=hm[3]),[text1_a,text1_b,text2_a,text2_b,hm[4]]):null},diff_match_patch.prototype.diff_cleanupSemantic=function(diffs){for(var changes=!1,equalities=[],equalitiesLength=0,lastEquality=null,pointer=0,length_insertions1=0,length_deletions1=0,length_insertions2=0,length_deletions2=0;pointer<diffs.length;)diffs[pointer][0]==DIFF_EQUAL?(equalities[equalitiesLength++]=pointer,length_insertions1=length_insertions2,length_deletions1=length_deletions2,length_insertions2=0,length_deletions2=0,lastEquality=diffs[pointer][1]):(diffs[pointer][0]==DIFF_INSERT?length_insertions2+=diffs[pointer][1].length:length_deletions2+=diffs[pointer][1].length,lastEquality&&lastEquality.length<=Math.max(length_insertions1,length_deletions1)&&lastEquality.length<=Math.max(length_insertions2,length_deletions2)&&(diffs.splice(equalities[equalitiesLength-1],0,new diff_match_patch.Diff(DIFF_DELETE,lastEquality)),diffs[equalities[equalitiesLength-1]+1][0]=DIFF_INSERT,equalitiesLength--,pointer=--equalitiesLength>0?equalities[equalitiesLength-1]:-1,length_insertions1=0,length_deletions1=0,length_insertions2=0,length_deletions2=0,lastEquality=null,changes=!0)),pointer++;for(changes&&this.diff_cleanupMerge(diffs),this.diff_cleanupSemanticLossless(diffs),pointer=1;pointer<diffs.length;){if(diffs[pointer-1][0]==DIFF_DELETE&&diffs[pointer][0]==DIFF_INSERT){var deletion=diffs[pointer-1][1],insertion=diffs[pointer][1],overlap_length1=this.diff_commonOverlap_(deletion,insertion),overlap_length2=this.diff_commonOverlap_(insertion,deletion);overlap_length1>=overlap_length2?(overlap_length1>=deletion.length/2||overlap_length1>=insertion.length/2)&&(diffs.splice(pointer,0,new diff_match_patch.Diff(DIFF_EQUAL,insertion.substring(0,overlap_length1))),diffs[pointer-1][1]=deletion.substring(0,deletion.length-overlap_length1),diffs[pointer+1][1]=insertion.substring(overlap_length1),pointer++):(overlap_length2>=deletion.length/2||overlap_length2>=insertion.length/2)&&(diffs.splice(pointer,0,new diff_match_patch.Diff(DIFF_EQUAL,deletion.substring(0,overlap_length2))),diffs[pointer-1][0]=DIFF_INSERT,diffs[pointer-1][1]=insertion.substring(0,insertion.length-overlap_length2),diffs[pointer+1][0]=DIFF_DELETE,diffs[pointer+1][1]=deletion.substring(overlap_length2),pointer++),pointer++}pointer++}},diff_match_patch.prototype.diff_cleanupSemanticLossless=function(diffs){function diff_cleanupSemanticScore_(one,two){if(!one||!two)return 6;var char1=one.charAt(one.length-1),char2=two.charAt(0),nonAlphaNumeric1=char1.match(diff_match_patch.nonAlphaNumericRegex_),nonAlphaNumeric2=char2.match(diff_match_patch.nonAlphaNumericRegex_),whitespace1=nonAlphaNumeric1&&char1.match(diff_match_patch.whitespaceRegex_),whitespace2=nonAlphaNumeric2&&char2.match(diff_match_patch.whitespaceRegex_),lineBreak1=whitespace1&&char1.match(diff_match_patch.linebreakRegex_),lineBreak2=whitespace2&&char2.match(diff_match_patch.linebreakRegex_),blankLine1=lineBreak1&&one.match(diff_match_patch.blanklineEndRegex_),blankLine2=lineBreak2&&two.match(diff_match_patch.blanklineStartRegex_);return blankLine1||blankLine2?5:lineBreak1||lineBreak2?4:nonAlphaNumeric1&&!whitespace1&&whitespace2?3:whitespace1||whitespace2?2:nonAlphaNumeric1||nonAlphaNumeric2?1:0}for(var pointer=1;pointer<diffs.length-1;){if(diffs[pointer-1][0]==DIFF_EQUAL&&diffs[pointer+1][0]==DIFF_EQUAL){var equality1=diffs[pointer-1][1],edit=diffs[pointer][1],equality2=diffs[pointer+1][1],commonOffset=this.diff_commonSuffix(equality1,edit);if(commonOffset){var commonString=edit.substring(edit.length-commonOffset);equality1=equality1.substring(0,equality1.length-commonOffset),edit=commonString+edit.substring(0,edit.length-commonOffset),equality2=commonString+equality2}for(var bestEquality1=equality1,bestEdit=edit,bestEquality2=equality2,bestScore=diff_cleanupSemanticScore_(equality1,edit)+diff_cleanupSemanticScore_(edit,equality2);edit.charAt(0)===equality2.charAt(0);){equality1+=edit.charAt(0),edit=edit.substring(1)+equality2.charAt(0),equality2=equality2.substring(1);var score=diff_cleanupSemanticScore_(equality1,edit)+diff_cleanupSemanticScore_(edit,equality2);score>=bestScore&&(bestScore=score,bestEquality1=equality1,bestEdit=edit,bestEquality2=equality2)}diffs[pointer-1][1]!=bestEquality1&&(bestEquality1?diffs[pointer-1][1]=bestEquality1:(diffs.splice(pointer-1,1),pointer--),diffs[pointer][1]=bestEdit,bestEquality2?diffs[pointer+1][1]=bestEquality2:(diffs.splice(pointer+1,1),pointer--))}pointer++}},diff_match_patch.nonAlphaNumericRegex_=/[^a-zA-Z0-9]/,diff_match_patch.whitespaceRegex_=/\s/,diff_match_patch.linebreakRegex_=/[\r\n]/,diff_match_patch.blanklineEndRegex_=/\n\r?\n$/,diff_match_patch.blanklineStartRegex_=/^\r?\n\r?\n/,diff_match_patch.prototype.diff_cleanupEfficiency=function(diffs){for(var changes=!1,equalities=[],equalitiesLength=0,lastEquality=null,pointer=0,pre_ins=!1,pre_del=!1,post_ins=!1,post_del=!1;pointer<diffs.length;)diffs[pointer][0]==DIFF_EQUAL?(diffs[pointer][1].length<this.Diff_EditCost&&(post_ins||post_del)?(equalities[equalitiesLength++]=pointer,pre_ins=post_ins,pre_del=post_del,lastEquality=diffs[pointer][1]):(equalitiesLength=0,lastEquality=null),post_ins=post_del=!1):(diffs[pointer][0]==DIFF_DELETE?post_del=!0:post_ins=!0,lastEquality&&(pre_ins&&pre_del&&post_ins&&post_del||lastEquality.length<this.Diff_EditCost/2&&pre_ins+pre_del+post_ins+post_del==3)&&(diffs.splice(equalities[equalitiesLength-1],0,new diff_match_patch.Diff(DIFF_DELETE,lastEquality)),diffs[equalities[equalitiesLength-1]+1][0]=DIFF_INSERT,equalitiesLength--,lastEquality=null,pre_ins&&pre_del?(post_ins=post_del=!0,equalitiesLength=0):(pointer=--equalitiesLength>0?equalities[equalitiesLength-1]:-1,post_ins=post_del=!1),changes=!0)),pointer++;changes&&this.diff_cleanupMerge(diffs)},diff_match_patch.prototype.diff_cleanupMerge=function(diffs){diffs.push(new diff_match_patch.Diff(DIFF_EQUAL,""));for(var pointer=0,count_delete=0,count_insert=0,text_delete="",text_insert="",commonlength;pointer<diffs.length;)switch(diffs[pointer][0]){case DIFF_INSERT:count_insert++,text_insert+=diffs[pointer][1],pointer++;break;case DIFF_DELETE:count_delete++,text_delete+=diffs[pointer][1],pointer++;break;case DIFF_EQUAL:count_delete+count_insert>1?(0!==count_delete&&0!==count_insert&&(0!==(commonlength=this.diff_commonPrefix(text_insert,text_delete))&&(pointer-count_delete-count_insert>0&&diffs[pointer-count_delete-count_insert-1][0]==DIFF_EQUAL?diffs[pointer-count_delete-count_insert-1][1]+=text_insert.substring(0,commonlength):(diffs.splice(0,0,new diff_match_patch.Diff(DIFF_EQUAL,text_insert.substring(0,commonlength))),pointer++),text_insert=text_insert.substring(commonlength),text_delete=text_delete.substring(commonlength)),0!==(commonlength=this.diff_commonSuffix(text_insert,text_delete))&&(diffs[pointer][1]=text_insert.substring(text_insert.length-commonlength)+diffs[pointer][1],text_insert=text_insert.substring(0,text_insert.length-commonlength),text_delete=text_delete.substring(0,text_delete.length-commonlength))),pointer-=count_delete+count_insert,diffs.splice(pointer,count_delete+count_insert),text_delete.length&&(diffs.splice(pointer,0,new diff_match_patch.Diff(DIFF_DELETE,text_delete)),pointer++),text_insert.length&&(diffs.splice(pointer,0,new diff_match_patch.Diff(DIFF_INSERT,text_insert)),pointer++),pointer++):0!==pointer&&diffs[pointer-1][0]==DIFF_EQUAL?(diffs[pointer-1][1]+=diffs[pointer][1],diffs.splice(pointer,1)):pointer++,count_insert=0,count_delete=0,text_delete="",text_insert=""}""===diffs[diffs.length-1][1]&&diffs.pop();var changes=!1;for(pointer=1;pointer<diffs.length-1;)diffs[pointer-1][0]==DIFF_EQUAL&&diffs[pointer+1][0]==DIFF_EQUAL&&(diffs[pointer][1].substring(diffs[pointer][1].length-diffs[pointer-1][1].length)==diffs[pointer-1][1]?(diffs[pointer][1]=diffs[pointer-1][1]+diffs[pointer][1].substring(0,diffs[pointer][1].length-diffs[pointer-1][1].length),diffs[pointer+1][1]=diffs[pointer-1][1]+diffs[pointer+1][1],diffs.splice(pointer-1,1),changes=!0):diffs[pointer][1].substring(0,diffs[pointer+1][1].length)==diffs[pointer+1][1]&&(diffs[pointer-1][1]+=diffs[pointer+1][1],diffs[pointer][1]=diffs[pointer][1].substring(diffs[pointer+1][1].length)+diffs[pointer+1][1],diffs.splice(pointer+1,1),changes=!0)),pointer++;changes&&this.diff_cleanupMerge(diffs)},diff_match_patch.prototype.diff_xIndex=function(diffs,loc){var chars1=0,chars2=0,last_chars1=0,last_chars2=0,x;for(x=0;x<diffs.length&&(diffs[x][0]!==DIFF_INSERT&&(chars1+=diffs[x][1].length),diffs[x][0]!==DIFF_DELETE&&(chars2+=diffs[x][1].length),!(chars1>loc));x++)last_chars1=chars1,last_chars2=chars2;return diffs.length!=x&&diffs[x][0]===DIFF_DELETE?last_chars2:last_chars2+(loc-last_chars1)},diff_match_patch.prototype.diff_prettyHtml=function(diffs){for(var html=[],pattern_amp=/&/g,pattern_lt=/</g,pattern_gt=/>/g,pattern_para=/\n/g,x=0;x<diffs.length;x++){var op=diffs[x][0],data,text=diffs[x][1].replace(pattern_amp,"&amp;").replace(pattern_lt,"&lt;").replace(pattern_gt,"&gt;").replace(pattern_para,"&para;<br>");switch(op){case DIFF_INSERT:html[x]='<ins style="background:#e6ffe6;">'+text+"</ins>";break;case DIFF_DELETE:html[x]='<del style="background:#ffe6e6;">'+text+"</del>";break;case DIFF_EQUAL:html[x]="<span>"+text+"</span>"}}return html.join("")},diff_match_patch.prototype.diff_text1=function(diffs){for(var text=[],x=0;x<diffs.length;x++)diffs[x][0]!==DIFF_INSERT&&(text[x]=diffs[x][1]);return text.join("")},diff_match_patch.prototype.diff_text2=function(diffs){for(var text=[],x=0;x<diffs.length;x++)diffs[x][0]!==DIFF_DELETE&&(text[x]=diffs[x][1]);return text.join("")},diff_match_patch.prototype.diff_levenshtein=function(diffs){for(var levenshtein=0,insertions=0,deletions=0,x=0;x<diffs.length;x++){var op=diffs[x][0],data=diffs[x][1];switch(op){case DIFF_INSERT:insertions+=data.length;break;case DIFF_DELETE:deletions+=data.length;break;case DIFF_EQUAL:levenshtein+=Math.max(insertions,deletions),insertions=0,deletions=0}}return levenshtein+=Math.max(insertions,deletions)},diff_match_patch.prototype.diff_toDelta=function(diffs){for(var text=[],x=0;x<diffs.length;x++)switch(diffs[x][0]){case DIFF_INSERT:text[x]="+"+encodeURI(diffs[x][1]);break;case DIFF_DELETE:text[x]="-"+diffs[x][1].length;break;case DIFF_EQUAL:text[x]="="+diffs[x][1].length}return text.join("\t").replace(/%20/g," ")},diff_match_patch.prototype.diff_fromDelta=function(text1,delta){for(var diffs=[],diffsLength=0,pointer=0,tokens=delta.split(/\t/g),x=0;x<tokens.length;x++){var param=tokens[x].substring(1);switch(tokens[x].charAt(0)){case"+":try{diffs[diffsLength++]=new diff_match_patch.Diff(DIFF_INSERT,decodeURI(param))}catch(ex){throw new Error("Illegal escape in diff_fromDelta: "+param)}break;case"-":case"=":var n=parseInt(param,10);if(isNaN(n)||n<0)throw new Error("Invalid number in diff_fromDelta: "+param);var text=text1.substring(pointer,pointer+=n);"="==tokens[x].charAt(0)?diffs[diffsLength++]=new diff_match_patch.Diff(DIFF_EQUAL,text):diffs[diffsLength++]=new diff_match_patch.Diff(DIFF_DELETE,text);break;default:if(tokens[x])throw new Error("Invalid diff operation in diff_fromDelta: "+tokens[x])}}if(pointer!=text1.length)throw new Error("Delta length ("+pointer+") does not equal source text length ("+text1.length+").");return diffs},diff_match_patch.prototype.match_main=function(text,pattern,loc){if(null==text||null==pattern||null==loc)throw new Error("Null input. (match_main)");return loc=Math.max(0,Math.min(loc,text.length)),text==pattern?0:text.length?text.substring(loc,loc+pattern.length)==pattern?loc:this.match_bitap_(text,pattern,loc):-1},diff_match_patch.prototype.match_bitap_=function(text,pattern,loc){if(pattern.length>this.Match_MaxBits)throw new Error("Pattern too long for this browser.");var s=this.match_alphabet_(pattern),dmp=this;function match_bitapScore_(e,x){var accuracy=e/pattern.length,proximity=Math.abs(loc-x);return dmp.Match_Distance?accuracy+proximity/dmp.Match_Distance:proximity?1:accuracy}var score_threshold=this.Match_Threshold,best_loc=text.indexOf(pattern,loc);-1!=best_loc&&(score_threshold=Math.min(match_bitapScore_(0,best_loc),score_threshold),-1!=(best_loc=text.lastIndexOf(pattern,loc+pattern.length))&&(score_threshold=Math.min(match_bitapScore_(0,best_loc),score_threshold)));var matchmask=1<<pattern.length-1,bin_min,bin_mid;best_loc=-1;for(var bin_max=pattern.length+text.length,last_rd,d=0;d<pattern.length;d++){for(bin_min=0,bin_mid=bin_max;bin_min<bin_mid;)match_bitapScore_(d,loc+bin_mid)<=score_threshold?bin_min=bin_mid:bin_max=bin_mid,bin_mid=Math.floor((bin_max-bin_min)/2+bin_min);bin_max=bin_mid;var start=Math.max(1,loc-bin_mid+1),finish=Math.min(loc+bin_mid,text.length)+pattern.length,rd=Array(finish+2);rd[finish+1]=(1<<d)-1;for(var j=finish;j>=start;j--){var charMatch=s[text.charAt(j-1)];if(rd[j]=0===d?(rd[j+1]<<1|1)&charMatch:(rd[j+1]<<1|1)&charMatch|(last_rd[j+1]|last_rd[j])<<1|1|last_rd[j+1],rd[j]&matchmask){var score=match_bitapScore_(d,j-1);if(score<=score_threshold){if(score_threshold=score,!((best_loc=j-1)>loc))break;start=Math.max(1,2*loc-best_loc)}}}if(match_bitapScore_(d+1,loc)>score_threshold)break;last_rd=rd}return best_loc},diff_match_patch.prototype.match_alphabet_=function(pattern){for(var s={},i=0;i<pattern.length;i++)s[pattern.charAt(i)]=0;for(var i=0;i<pattern.length;i++)s[pattern.charAt(i)]|=1<<pattern.length-i-1;return s},diff_match_patch.prototype.patch_addContext_=function(patch,text){if(0!=text.length){if(null===patch.start2)throw Error("patch not initialized");for(var pattern=text.substring(patch.start2,patch.start2+patch.length1),padding=0;text.indexOf(pattern)!=text.lastIndexOf(pattern)&&pattern.length<this.Match_MaxBits-this.Patch_Margin-this.Patch_Margin;)padding+=this.Patch_Margin,pattern=text.substring(patch.start2-padding,patch.start2+patch.length1+padding);padding+=this.Patch_Margin;var prefix=text.substring(patch.start2-padding,patch.start2);prefix&&patch.diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL,prefix));var suffix=text.substring(patch.start2+patch.length1,patch.start2+patch.length1+padding);suffix&&patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL,suffix)),patch.start1-=prefix.length,patch.start2-=prefix.length,patch.length1+=prefix.length+suffix.length,patch.length2+=prefix.length+suffix.length}},diff_match_patch.prototype.patch_make=function(a,opt_b,opt_c){var text1,diffs;if("string"==typeof a&&"string"==typeof opt_b&&void 0===opt_c)text1=a,(diffs=this.diff_main(text1,opt_b,!0)).length>2&&(this.diff_cleanupSemantic(diffs),this.diff_cleanupEfficiency(diffs));else if(a&&"object"==typeof a&&void 0===opt_b&&void 0===opt_c)diffs=a,text1=this.diff_text1(diffs);else if("string"==typeof a&&opt_b&&"object"==typeof opt_b&&void 0===opt_c)text1=a,diffs=opt_b;else{if("string"!=typeof a||"string"!=typeof opt_b||!opt_c||"object"!=typeof opt_c)throw new Error("Unknown call format to patch_make.");text1=a,diffs=opt_c}if(0===diffs.length)return[];for(var patches=[],patch=new diff_match_patch.patch_obj,patchDiffLength=0,char_count1=0,char_count2=0,prepatch_text=text1,postpatch_text=text1,x=0;x<diffs.length;x++){var diff_type=diffs[x][0],diff_text=diffs[x][1];switch(patchDiffLength||diff_type===DIFF_EQUAL||(patch.start1=char_count1,patch.start2=char_count2),diff_type){case DIFF_INSERT:patch.diffs[patchDiffLength++]=diffs[x],patch.length2+=diff_text.length,postpatch_text=postpatch_text.substring(0,char_count2)+diff_text+postpatch_text.substring(char_count2);break;case DIFF_DELETE:patch.length1+=diff_text.length,patch.diffs[patchDiffLength++]=diffs[x],postpatch_text=postpatch_text.substring(0,char_count2)+postpatch_text.substring(char_count2+diff_text.length);break;case DIFF_EQUAL:diff_text.length<=2*this.Patch_Margin&&patchDiffLength&&diffs.length!=x+1?(patch.diffs[patchDiffLength++]=diffs[x],patch.length1+=diff_text.length,patch.length2+=diff_text.length):diff_text.length>=2*this.Patch_Margin&&patchDiffLength&&(this.patch_addContext_(patch,prepatch_text),patches.push(patch),patch=new diff_match_patch.patch_obj,patchDiffLength=0,prepatch_text=postpatch_text,char_count1=char_count2)}diff_type!==DIFF_INSERT&&(char_count1+=diff_text.length),diff_type!==DIFF_DELETE&&(char_count2+=diff_text.length)}return patchDiffLength&&(this.patch_addContext_(patch,prepatch_text),patches.push(patch)),patches},diff_match_patch.prototype.patch_deepCopy=function(patches){for(var patchesCopy=[],x=0;x<patches.length;x++){var patch=patches[x],patchCopy=new diff_match_patch.patch_obj;patchCopy.diffs=[];for(var y=0;y<patch.diffs.length;y++)patchCopy.diffs[y]=new diff_match_patch.Diff(patch.diffs[y][0],patch.diffs[y][1]);patchCopy.start1=patch.start1,patchCopy.start2=patch.start2,patchCopy.length1=patch.length1,patchCopy.length2=patch.length2,patchesCopy[x]=patchCopy}return patchesCopy},diff_match_patch.prototype.patch_apply=function(patches,text){if(0==patches.length)return[text,[]];patches=this.patch_deepCopy(patches);var nullPadding=this.patch_addPadding(patches);text=nullPadding+text+nullPadding,this.patch_splitMax(patches);for(var delta=0,results=[],x=0;x<patches.length;x++){var expected_loc=patches[x].start2+delta,text1=this.diff_text1(patches[x].diffs),start_loc,end_loc=-1,text2;if(text1.length>this.Match_MaxBits?-1!=(start_loc=this.match_main(text,text1.substring(0,this.Match_MaxBits),expected_loc))&&(-1==(end_loc=this.match_main(text,text1.substring(text1.length-this.Match_MaxBits),expected_loc+text1.length-this.Match_MaxBits))||start_loc>=end_loc)&&(start_loc=-1):start_loc=this.match_main(text,text1,expected_loc),-1==start_loc)results[x]=!1,delta-=patches[x].length2-patches[x].length1;else if(results[x]=!0,delta=start_loc-expected_loc,text1==(text2=-1==end_loc?text.substring(start_loc,start_loc+text1.length):text.substring(start_loc,end_loc+this.Match_MaxBits)))text=text.substring(0,start_loc)+this.diff_text2(patches[x].diffs)+text.substring(start_loc+text1.length);else{var diffs=this.diff_main(text1,text2,!1);if(text1.length>this.Match_MaxBits&&this.diff_levenshtein(diffs)/text1.length>this.Patch_DeleteThreshold)results[x]=!1;else{this.diff_cleanupSemanticLossless(diffs);for(var index1=0,index2,y=0;y<patches[x].diffs.length;y++){var mod=patches[x].diffs[y];mod[0]!==DIFF_EQUAL&&(index2=this.diff_xIndex(diffs,index1)),mod[0]===DIFF_INSERT?text=text.substring(0,start_loc+index2)+mod[1]+text.substring(start_loc+index2):mod[0]===DIFF_DELETE&&(text=text.substring(0,start_loc+index2)+text.substring(start_loc+this.diff_xIndex(diffs,index1+mod[1].length))),mod[0]!==DIFF_DELETE&&(index1+=mod[1].length)}}}}return[text=text.substring(nullPadding.length,text.length-nullPadding.length),results]},diff_match_patch.prototype.patch_addPadding=function(patches){for(var paddingLength=this.Patch_Margin,nullPadding="",x=1;x<=paddingLength;x++)nullPadding+=String.fromCharCode(x);for(var x=0;x<patches.length;x++)patches[x].start1+=paddingLength,patches[x].start2+=paddingLength;var patch=patches[0],diffs=patch.diffs;if(0==diffs.length||diffs[0][0]!=DIFF_EQUAL)diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL,nullPadding)),patch.start1-=paddingLength,patch.start2-=paddingLength,patch.length1+=paddingLength,patch.length2+=paddingLength;else if(paddingLength>diffs[0][1].length){var extraLength=paddingLength-diffs[0][1].length;diffs[0][1]=nullPadding.substring(diffs[0][1].length)+diffs[0][1],patch.start1-=extraLength,patch.start2-=extraLength,patch.length1+=extraLength,patch.length2+=extraLength}if(0==(diffs=(patch=patches[patches.length-1]).diffs).length||diffs[diffs.length-1][0]!=DIFF_EQUAL)diffs.push(new diff_match_patch.Diff(DIFF_EQUAL,nullPadding)),patch.length1+=paddingLength,patch.length2+=paddingLength;else if(paddingLength>diffs[diffs.length-1][1].length){var extraLength=paddingLength-diffs[diffs.length-1][1].length;diffs[diffs.length-1][1]+=nullPadding.substring(0,extraLength),patch.length1+=extraLength,patch.length2+=extraLength}return nullPadding},diff_match_patch.prototype.patch_splitMax=function(patches){for(var patch_size=this.Match_MaxBits,x=0;x<patches.length;x++)if(!(patches[x].length1<=patch_size)){var bigpatch=patches[x];patches.splice(x--,1);for(var start1=bigpatch.start1,start2=bigpatch.start2,precontext="";0!==bigpatch.diffs.length;){var patch=new diff_match_patch.patch_obj,empty=!0;for(patch.start1=start1-precontext.length,patch.start2=start2-precontext.length,""!==precontext&&(patch.length1=patch.length2=precontext.length,patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL,precontext)));0!==bigpatch.diffs.length&&patch.length1<patch_size-this.Patch_Margin;){var diff_type=bigpatch.diffs[0][0],diff_text=bigpatch.diffs[0][1];diff_type===DIFF_INSERT?(patch.length2+=diff_text.length,start2+=diff_text.length,patch.diffs.push(bigpatch.diffs.shift()),empty=!1):diff_type===DIFF_DELETE&&1==patch.diffs.length&&patch.diffs[0][0]==DIFF_EQUAL&&diff_text.length>2*patch_size?(patch.length1+=diff_text.length,start1+=diff_text.length,empty=!1,patch.diffs.push(new diff_match_patch.Diff(diff_type,diff_text)),bigpatch.diffs.shift()):(diff_text=diff_text.substring(0,patch_size-patch.length1-this.Patch_Margin),patch.length1+=diff_text.length,start1+=diff_text.length,diff_type===DIFF_EQUAL?(patch.length2+=diff_text.length,start2+=diff_text.length):empty=!1,patch.diffs.push(new diff_match_patch.Diff(diff_type,diff_text)),diff_text==bigpatch.diffs[0][1]?bigpatch.diffs.shift():bigpatch.diffs[0][1]=bigpatch.diffs[0][1].substring(diff_text.length))}precontext=(precontext=this.diff_text2(patch.diffs)).substring(precontext.length-this.Patch_Margin);var postcontext=this.diff_text1(bigpatch.diffs).substring(0,this.Patch_Margin);""!==postcontext&&(patch.length1+=postcontext.length,patch.length2+=postcontext.length,0!==patch.diffs.length&&patch.diffs[patch.diffs.length-1][0]===DIFF_EQUAL?patch.diffs[patch.diffs.length-1][1]+=postcontext:patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL,postcontext))),empty||patches.splice(++x,0,patch)}}},diff_match_patch.prototype.patch_toText=function(patches){for(var text=[],x=0;x<patches.length;x++)text[x]=patches[x];return text.join("")},diff_match_patch.prototype.patch_fromText=function(textline){var patches=[];if(!textline)return patches;for(var text=textline.split("\n"),textPointer=0,patchHeader=/^@@ -(\d+),?(\d*) \+(\d+),?(\d*) @@$/;textPointer<text.length;){var m=text[textPointer].match(patchHeader);if(!m)throw new Error("Invalid patch string: "+text[textPointer]);var patch=new diff_match_patch.patch_obj;for(patches.push(patch),patch.start1=parseInt(m[1],10),""===m[2]?(patch.start1--,patch.length1=1):"0"==m[2]?patch.length1=0:(patch.start1--,patch.length1=parseInt(m[2],10)),patch.start2=parseInt(m[3],10),""===m[4]?(patch.start2--,patch.length2=1):"0"==m[4]?patch.length2=0:(patch.start2--,patch.length2=parseInt(m[4],10)),textPointer++;textPointer<text.length;){var sign=text[textPointer].charAt(0);try{var line=decodeURI(text[textPointer].substring(1))}catch(ex){throw new Error("Illegal escape in patch_fromText: "+line)}if("-"==sign)patch.diffs.push(new diff_match_patch.Diff(DIFF_DELETE,line));else if("+"==sign)patch.diffs.push(new diff_match_patch.Diff(DIFF_INSERT,line));else if(" "==sign)patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL,line));else{if("@"==sign)break;if(""!==sign)throw new Error('Invalid patch mode "'+sign+'" in: '+line)}textPointer++}}return patches},diff_match_patch.patch_obj=function(){this.diffs=[],this.start1=null,this.start2=null,this.length1=0,this.length2=0},diff_match_patch.patch_obj.prototype.toString=function(){for(var coords1,coords2,text=["@@ -"+(coords1=0===this.length1?this.start1+",0":1==this.length1?this.start1+1:this.start1+1+","+this.length1)+" +"+(coords2=0===this.length2?this.start2+",0":1==this.length2?this.start2+1:this.start2+1+","+this.length2)+" @@\n"],op,x=0;x<this.diffs.length;x++){switch(this.diffs[x][0]){case DIFF_INSERT:op="+";break;case DIFF_DELETE:op="-";break;case DIFF_EQUAL:op=" "}text[x+1]=op+encodeURI(this.diffs[x][1])+"\n"}return text.join("").replace(/%20/g," ")},this.diff_match_patch=diff_match_patch,this.DIFF_DELETE=DIFF_DELETE,this.DIFF_INSERT=DIFF_INSERT,this.DIFF_EQUAL=DIFF_EQUAL; /** media/js/difflib.min.js **/ var __whitespace={" ":!0,"\t":!0,"\n":!0,"\f":!0,"\r":!0},difflib={defaultJunkFunction:function(c){return __whitespace.hasOwnProperty(c)},stripLinebreaks:function(str){return str.replace(/^[\n\r]*|[\n\r]*$/g,"")},stringAsLines:function(str){for(var lfpos=str.indexOf("\n"),crpos=str.indexOf("\r"),linebreak=lfpos>-1&&crpos>-1||crpos<0?"\n":"\r",lines=str.split(linebreak),i=0;i<lines.length;i++)lines[i]=difflib.stripLinebreaks(lines[i]);return lines},__reduce:function(func,list,initial){var value,idx;if(null!=initial)value=initial,idx=0;else{if(!list)return null;value=list[0],idx=1}for(;idx<list.length;idx++)value=func(value,list[idx]);return value},__ntuplecomp:function(a,b){for(var mlen=Math.max(a.length,b.length),i=0;i<mlen;i++){if(a[i]<b[i])return-1;if(a[i]>b[i])return 1}return a.length==b.length?0:a.length<b.length?-1:1},__calculate_ratio:function(matches,length){return length?2*matches/length:1},__isindict:function(dict){return function(key){return dict.hasOwnProperty(key)}},__dictget:function(dict,key,defaultValue){return dict.hasOwnProperty(key)?dict[key]:defaultValue},SequenceMatcher:function(a,b,isjunk){this.set_seqs=function(a,b){this.set_seq1(a),this.set_seq2(b)},this.set_seq1=function(a){a!=this.a&&(this.a=a,this.matching_blocks=this.opcodes=null)},this.set_seq2=function(b){b!=this.b&&(this.b=b,this.matching_blocks=this.opcodes=this.fullbcount=null,this.__chain_b())},this.__chain_b=function(){for(var b=this.b,n=b.length,b2j=this.b2j={},populardict={},i=0;i<b.length;i++){var elt=b[i];if(b2j.hasOwnProperty(elt)){var indices=b2j[elt];n>=200&&100*indices.length>n?(populardict[elt]=1,delete b2j[elt]):indices.push(i)}else b2j[elt]=[i]}for(var elt in populardict)populardict.hasOwnProperty(elt)&&delete b2j[elt];var isjunk=this.isjunk,junkdict={};if(isjunk){for(var elt in populardict)populardict.hasOwnProperty(elt)&&isjunk(elt)&&(junkdict[elt]=1,delete populardict[elt]);for(var elt in b2j)b2j.hasOwnProperty(elt)&&isjunk(elt)&&(junkdict[elt]=1,delete b2j[elt])}this.isbjunk=difflib.__isindict(junkdict),this.isbpopular=difflib.__isindict(populardict)},this.find_longest_match=function(alo,ahi,blo,bhi){for(var a=this.a,b=this.b,b2j=this.b2j,isbjunk=this.isbjunk,besti=alo,bestj=blo,bestsize=0,j=null,k,j2len={},nothing=[],i=alo;i<ahi;i++){var newj2len={},jdict=difflib.__dictget(b2j,a[i],nothing);for(var jkey in jdict)if(jdict.hasOwnProperty(jkey)){if((j=jdict[jkey])<blo)continue;if(j>=bhi)break;newj2len[j]=k=difflib.__dictget(j2len,j-1,0)+1,k>bestsize&&(besti=i-k+1,bestj=j-k+1,bestsize=k)}j2len=newj2len}for(;besti>alo&&bestj>blo&&!isbjunk(b[bestj-1])&&a[besti-1]==b[bestj-1];)besti--,bestj--,bestsize++;for(;besti+bestsize<ahi&&bestj+bestsize<bhi&&!isbjunk(b[bestj+bestsize])&&a[besti+bestsize]==b[bestj+bestsize];)bestsize++;for(;besti>alo&&bestj>blo&&isbjunk(b[bestj-1])&&a[besti-1]==b[bestj-1];)besti--,bestj--,bestsize++;for(;besti+bestsize<ahi&&bestj+bestsize<bhi&&isbjunk(b[bestj+bestsize])&&a[besti+bestsize]==b[bestj+bestsize];)bestsize++;return[besti,bestj,bestsize]},this.get_matching_blocks=function(){if(null!=this.matching_blocks)return this.matching_blocks;for(var la=this.a.length,lb=this.b.length,queue=[[0,la,0,lb]],matching_blocks=[],alo,ahi,blo,bhi,qi,i,j,k,x;queue.length;)alo=(qi=queue.pop())[0],ahi=qi[1],blo=qi[2],bhi=qi[3],i=(x=this.find_longest_match(alo,ahi,blo,bhi))[0],j=x[1],(k=x[2])&&(matching_blocks.push(x),alo<i&&blo<j&&queue.push([alo,i,blo,j]),i+k<ahi&&j+k<bhi&&queue.push([i+k,ahi,j+k,bhi]));matching_blocks.sort(difflib.__ntuplecomp);var i1=0,j1=0,k1=0,block=0,i2,j2,k2,non_adjacent=[];for(var idx in matching_blocks)matching_blocks.hasOwnProperty(idx)&&(i2=(block=matching_blocks[idx])[0],j2=block[1],k2=block[2],i1+k1==i2&&j1+k1==j2?k1+=k2:(k1&&non_adjacent.push([i1,j1,k1]),i1=i2,j1=j2,k1=k2));return k1&&non_adjacent.push([i1,j1,k1]),non_adjacent.push([la,lb,0]),this.matching_blocks=non_adjacent,this.matching_blocks},this.get_opcodes=function(){if(null!=this.opcodes)return this.opcodes;var i=0,j=0,answer=[];this.opcodes=answer;var block,ai,bj,size,tag,blocks=this.get_matching_blocks();for(var idx in blocks)blocks.hasOwnProperty(idx)&&(ai=(block=blocks[idx])[0],bj=block[1],size=block[2],tag="",i<ai&&j<bj?tag="replace":i<ai?tag="delete":j<bj&&(tag="insert"),tag&&answer.push([tag,i,ai,j,bj]),i=ai+size,j=bj+size,size&&answer.push(["equal",ai,i,bj,j]));return answer},this.get_grouped_opcodes=function(n){n||(n=3);var codes=this.get_opcodes(),code,tag,i1,i2,j1,j2;codes||(codes=[["equal",0,1,0,1]]),"equal"==codes[0][0]&&(tag=(code=codes[0])[0],i1=code[1],i2=code[2],j1=code[3],j2=code[4],codes[0]=[tag,Math.max(i1,i2-n),i2,Math.max(j1,j2-n),j2]),"equal"==codes[codes.length-1][0]&&(tag=(code=codes[codes.length-1])[0],i1=code[1],i2=code[2],j1=code[3],j2=code[4],codes[codes.length-1]=[tag,i1,Math.min(i2,i1+n),j1,Math.min(j2,j1+n)]);var nn=n+n,group=[],groups=[];for(var idx in codes)codes.hasOwnProperty(idx)&&(tag=(code=codes[idx])[0],i1=code[1],i2=code[2],j1=code[3],j2=code[4],"equal"==tag&&i2-i1>nn&&(group.push([tag,i1,Math.min(i2,i1+n),j1,Math.min(j2,j1+n)]),groups.push(group),group=[],i1=Math.max(i1,i2-n),j1=Math.max(j1,j2-n)),group.push([tag,i1,i2,j1,j2]));return!group||1==group.length&&"equal"==group[0][0]||groups.push(group),groups},this.ratio=function(){return matches=difflib.__reduce((function(sum,triple){return sum+triple[triple.length-1]}),this.get_matching_blocks(),0),difflib.__calculate_ratio(matches,this.a.length+this.b.length)},this.quick_ratio=function(){var fullbcount,elt;if(null==this.fullbcount){this.fullbcount=fullbcount={};for(var i=0;i<this.b.length;i++)fullbcount[elt=this.b[i]]=difflib.__dictget(fullbcount,elt,0)+1}fullbcount=this.fullbcount;for(var avail={},availhas=difflib.__isindict(avail),matches=numb=0,i=0;i<this.a.length;i++)availhas(elt=this.a[i])?numb=avail[elt]:numb=difflib.__dictget(fullbcount,elt,0),avail[elt]=numb-1,numb>0&&matches++;return difflib.__calculate_ratio(matches,this.a.length+this.b.length)},this.real_quick_ratio=function(){var la=this.a.length,lb=this.b.length;return _calculate_ratio(Math.min(la,lb),la+lb)},this.isjunk=isjunk||difflib.defaultJunkFunction,this.a=this.b=null,this.set_seqs(a,b)}}; /** media/js/diffview.min.js **/ var dmp=new diff_match_patch;diffview={buildView:function(params){var baseTextLines=params.baseTextLines,newTextLines=params.newTextLines,opcodes=params.opcodes,baseTextName=params.baseTextName?params.baseTextName:"Base Text",newTextName=params.newTextName?params.newTextName:"New Text",contextSize=params.contextSize,inline=0==params.viewType||1==params.viewType?params.viewType:0,inserted=0,deleted=0,changed=0,insertC=document.getElementById("insertCount"),deletedC=document.getElementById("deletedCount"),changedC=document.getElementById("changedCount");if(null==baseTextLines)throw"Cannot build diff view; baseTextLines is not defined.";if(null==newTextLines)throw"Cannot build diff view; newTextLines is not defined.";if(!opcodes)throw"Cannot build diff view; opcodes is not defined.";function celt(name,clazz,id){id=id||!1;var e=document.createElement(name);return e.className=clazz,id&&(e.id=id),e}function telt(name,text){var e=document.createElement(name);return e.appendChild(document.createTextNode(text)),e}function ctelt(name,clazz,text,cleanText){cleanText=cleanText||"";var e=document.createElement(name);return e.className=clazz,e.dataset.text=cleanText,e.appendChild(document.createTextNode(text)),e}function btelt(name,clazz,text,cleanText){cleanText=cleanText||"";var e=document.createElement(name);return e.className=clazz,e.dataset.text=cleanText,e.innerHTML=text,e}var tdata=document.createElement("thead"),node=document.createElement("tr");tdata.appendChild(node),inline?(node.appendChild(document.createElement("th")),node.appendChild(document.createElement("th")),node.appendChild(ctelt("th","texttitle",baseTextName+" vs. "+newTextName))):(node.appendChild(document.createElement("th")),node.appendChild(ctelt("th","texttitle",newTextName)),node.appendChild(document.createElement("th")),node.appendChild(ctelt("th","texttitle",baseTextName))),tdata=[tdata];var rows=[],node2;function addCells(row,tidx,tend,textLines,change){return tidx<tend?(row.appendChild(telt("th",(tidx+1).toString())),row.appendChild(ctelt("td",change,textLines[tidx].replace(/\t/g,"    "),textLines[tidx])),tidx+1):(row.appendChild(document.createElement("th")),row.appendChild(celt("td","empty")),tidx)}function addCellsSpecial(row,tidx,tend,widx,wend,change,sourceTxt,inlineDiff,last){if(tidx<tend){last&&widx--;for(var output="",e=0;e<inlineDiff.length;e++){var currDiff=inlineDiff[e];switch(currDiff[0]){case 0:output+=currDiff[1];break;case 1:last||(output=output+'<span class="ins">'+currDiff[1]+"</span>");break;case-1:last&&(output=output+'<span class="dell">'+currDiff[1]+"</span>")}}return cleanText=output,row.appendChild(telt("th",(tidx+1).toString())),row.appendChild(btelt("td",change,cleanText,sourceTxt)),tidx+1}return row.appendChild(document.createElement("th")),row.appendChild(celt("td","empty")),tidx}function addCellsInline(row,tidx,tidx2,textLines,change){row.appendChild(telt("th",null==tidx?"":(tidx+1).toString())),row.appendChild(telt("th",null==tidx2?"":(tidx2+1).toString())),row.appendChild(ctelt("td",change,textLines[null!=tidx?tidx:tidx2].replace(/\t/g,"    ")))}for(var idx=0;idx<opcodes.length;idx++){code=opcodes[idx],change=code[0];for(var b=code[3],be=code[4],n=code[1],ne=code[2],rowcnt=Math.max(be-b,ne-n),toprows=[],botrows=[],i=0;i<rowcnt;i++){if(contextSize&&opcodes.length>1&&(idx>0&&i==contextSize||0==idx&&0==i)&&"equal"==change){var jump=rowcnt-(0==idx?1:2)*contextSize;if(jump>1){if(toprows.push(node=document.createElement("tr")),b+=jump,n+=jump,i+=jump-1,node.appendChild(telt("th","...")),inline||node.appendChild(ctelt("td","skip","")),node.appendChild(telt("th","...")),node.appendChild(ctelt("td","skip","")),idx+1==opcodes.length)break;continue}}if(toprows.push(node=document.createElement("tr")),inline)"insert"==change?addCellsInline(node,null,n++,newTextLines,change):"replace"==change?(botrows.push(node2=document.createElement("tr")),b<be&&addCellsInline(node,b++,null,baseTextLines,"delete"),n<ne&&addCellsInline(node2,null,n++,newTextLines,"insert")):"delete"==change?addCellsInline(node,b++,null,baseTextLines,change):addCellsInline(node,b++,n++,baseTextLines,change);else{switch(change){case"insert":inserted++,node.classList.add("difference");break;case"replace":b<be&&n<ne?changed++:inserted++,node.classList.add("difference");break;case"delete":deleted++,node.classList.add("difference")}if("replace"==change)if(b<be&&n<ne){var cleanText=newTextLines[b].replace(/\t/g,"    ").replace(/</g,"&lt;").replace(/>/g,"&gt;"),diffText=baseTextLines[n].replace(/\t/g,"    ").replace(/</g,"&lt;").replace(/>/g,"&gt;"),inlineDiff=dmp.diff_main(diffText,cleanText);b<be?leftLines.push(newTextLines[b]):leftLines.push("@empty@"),n<ne?rightLines.push(baseTextLines[n]):rightLines.push("@empty@"),b=addCellsSpecial(node,b,be,n,ne,change,newTextLines[b],inlineDiff,!1),n=addCellsSpecial(node,n,ne,b,be,change,baseTextLines[n],inlineDiff,!0)}else b<be?leftLines.push(newTextLines[b]):leftLines.push("@empty@"),n<ne?rightLines.push(baseTextLines[n]):rightLines.push("@empty@"),b=addCells(node,b,be,newTextLines,"insert"),n=addCells(node,n,ne,baseTextLines,change);else b<be?leftLines.push(newTextLines[b]):leftLines.push("@empty@"),n<ne?rightLines.push(baseTextLines[n]):rightLines.push("@empty@"),b=addCells(node,b,be,newTextLines,change),n=addCells(node,n,ne,baseTextLines,change)}}for(var i=0;i<toprows.length;i++)rows.push(toprows[i]);for(var i=0;i<botrows.length;i++)rows.push(botrows[i])}for(var idx in mergeResult=[...rightLines],insertC.innerHTML=inserted,changedC.innerHTML=changed,deletedC.innerHTML=deleted,0===inserted&&0===changed&&0===deleted&&(window.NO_CHANGES=!0),tdata.push(node=document.createElement("tbody")),rows)rows.hasOwnProperty(idx)&&node.appendChild(rows[idx]);for(var idx in node=celt("table","diff"+(inline?" inlinediff":""),"diff"),tdata)tdata.hasOwnProperty(idx)&&node.appendChild(tdata[idx]);return node}}; /** media/js/smoothscroll.min.js **/ function getOffsetTop(el){if(!el)return 0;var yOffset=el.offsetTop,parent;return(yOffset+=getOffsetTop(el.offsetParent))-30}function getScrollTop(scrollable){return scrollable.scrollY||scrollable.scrollTop||document.body.scrollTop||document.documentElement.scrollTop}function getScrollLeft(scrollable){return scrollable.scrollLeft||0}function scrollTo(scrollable,coords,millisecondsToTake){var currentY=getScrollTop(scrollable),diffY=coords.y-currentY,startTimestamp=null;function doScroll(currentTimestamp){null===startTimestamp&&(startTimestamp=currentTimestamp);var progress=currentTimestamp-startTimestamp,fractionDone=progress/millisecondsToTake,pointOnSineWave=Math.sin(fractionDone*Math.PI/2);scrollable.scroll(coords.x,currentY+diffY*pointOnSineWave),progress<millisecondsToTake?window.requestAnimationFrame(doScroll):scrollable.scroll(coords.x,coords.y)}coords.y!==currentY&&"function"==typeof scrollable.scrollTo&&window.requestAnimationFrame(doScroll)}function scrollToX(scrollable,newPos,millisecondsToTake,direction){var currentX=getScrollLeft(scrollable),startTimestamp=null,dist="right"===direction?newPos-currentX:currentX-newPos;function doScroll(currentTimestamp){null===startTimestamp&&(startTimestamp=currentTimestamp);var progress=currentTimestamp-startTimestamp,fractionDone=progress/millisecondsToTake,pointOnSineWave=Math.sin(fractionDone*Math.PI/2);scrollable.scrollLeft="right"===direction?currentX+dist*pointOnSineWave:currentX-dist*pointOnSineWave,progress<millisecondsToTake?window.requestAnimationFrame(doScroll):scrollable.scrollLeft=newPos}window.requestAnimationFrame(doScroll)}function smoothScroll(target){target&&scrollTo(window,{x:0,y:getOffsetTop(target)},700)}function smoothScrollX(el,dist,direction){scrollToX(el,dist,700,direction)} /** media/js/TatuDiff.min.js **/ var TatuDiff={getEOL:eol=>{let $return="";switch(eol){case 2:$return="\r\n";break;case 1:$return="\n"}return $return},scrollToNext:()=>{let diffWindow,diffrences=document.getElementById("diffWindow").getElementsByClassName("difference");currChange>=0&&TatuDiff.checkIfinBlock(diffrences[currChange]);for(var i=0;i<diffrences.length;i++)if(i>currChange){smoothScroll(diffrences[i]),currChange=i,TatuDiff.checkIfinBlock(diffrences[i]);break}TatuDiff.setAutoSelected(diffrences[currChange])},scrollToPrev:()=>{let diffWindow,diffrences=document.getElementById("diffWindow").getElementsByClassName("difference");TatuDiff.checkIfinBlock(diffrences[currChange],"up");for(var i=diffrences.length;i>=0;i--)if(i<currChange){currChange=i,TatuDiff.checkIfinBlock(diffrences[i],"up");break}smoothScroll(diffrences[currChange]),TatuDiff.setAutoSelected(diffrences[currChange],"down")},scrollToRow:index=>{var trs=document.getElementsByTagName("tr");smoothScroll(trs[index-1])},checkIfinBlock:(el,direction="down")=>{if("down"===direction)for(;null!==el.nextElementSibling&&el.nextElementSibling.classList.contains("difference");)currChange++,el=el.nextElementSibling;else for(;null!==el.previousElementSibling&&el.previousElementSibling.classList.contains("difference");)currChange--,el=el.previousElementSibling},setAutoSelected:(el,direction="up")=>{if(TatuDiff.removeOtherSelected(),"down"===direction)for(el.classList.add("selected");null!==el.nextElementSibling&&el.nextElementSibling.classList.contains("difference");)(el=el.nextElementSibling).classList.add("selected");else for(el.classList.add("selected");null!==el.previousElementSibling&&el.previousElementSibling.classList.contains("difference");)(el=el.previousElementSibling).classList.add("selected");TatuDiff.enableButtons()},setClickFunctions:()=>{for(var table,trs=document.getElementById("diff").getElementsByTagName("tr"),i=0;i<trs.length;i++)trs[i].onclick=function(e){e.preventDefault(),TatuDiff.setSelect(this,e.shiftKey)}},setSelect:(el,shift)=>{shift?null!==lastSelected&&(TatuDiff.removeOtherSelected(),TatuDiff.selectBlock(el,lastSelected),TatuDiff.enableButtons()):el.classList.contains("selected")?TatuDiff.inBlockSelect()?(TatuDiff.removeOtherSelected(),el.classList.add("selected"),lastSelected=el,TatuDiff.enableButtons()):(TatuDiff.removeOtherSelected(),lastSelected=null,TatuDiff.disableButtons()):(TatuDiff.removeOtherSelected(),el.classList.add("selected"),lastSelected=el,TatuDiff.enableButtons())},selectBlock:(el,lastSelected)=>{for(var trs=document.getElementsByTagName("tr"),inSelect=!1,addEnd=!1,i=0;i<trs.length;i++)trs[i]===lastSelected?(inSelect&&!addEnd&&(addEnd=!0),inSelect||(inSelect=!0)):trs[i]===el&&(inSelect&&!addEnd&&(el.classList.add("selected"),addEnd=!0),inSelect||(inSelect=!0)),inSelect&&!addEnd&&trs[i].classList.add("selected")},inBlockSelect:()=>(selectedLines=document.getElementsByClassName("selected"),selectedLines.length>1),removeOtherSelected:()=>{for(var trs=document.getElementsByTagName("tr"),i=0;i<trs.length;i++)trs[i].classList.contains("selected")&&trs[i].classList.remove("selected")},copySelected:()=>{for(var result="",selectedLines=document.getElementsByClassName("selected"),addEOL=selectedLines.length-1,i=0;i<selectedLines.length;i++){var leftResult;result+=selectedLines[i].children[1].dataset.text,addEOL>0&&(result+=TatuDiff.getEOL(EOL),addEOL--)}clipboard.set(result)},mergeLines:selectedLines=>{let mergeTimeString=TatuDiff.getTimeString();for(var i=0;i<selectedLines.length;i++){var selectedLine=selectedLines[i],index=selectedLine.rowIndex-1,replaceWith="",children=selectedLine.children,emptyLine=!1;History.push({line:index,action:"merge",time:mergeTimeString}),selectedLine.classList.add("merged");for(var last=!1,e=0;e<children.length;e++)"TD"===children[e].nodeName&&(last?children[e].innerHTML=replaceWith:(replaceWith=children[e].innerHTML,children[e].classList.contains("empty")&&(emptyLine=!0)),last=!0);emptyLine&&selectedLine.classList.add("empty"),mergeResult[index]=leftLines[index]}TatuDiff.disableButtons()},deleteLines:selectedLines=>{let deleteTimeString=TatuDiff.getTimeString();for(var i=0;i<selectedLines.length;i++){var selectedLine=selectedLines[i],index=selectedLine.rowIndex-1;History.push({line:index,action:"remove",time:deleteTimeString}),selectedLine.classList.add("empty"),mergeResult[index]="@empty@"}TatuDiff.disableButtons()},mergeSelected:()=>{selectedLines=document.getElementsByClassName("selected"),selectedLines.length>0&&TatuDiff.mergeLines(selectedLines)},deleteSelected:()=>{selectedLines=document.getElementsByClassName("selected"),selectedLines.length>0&&TatuDiff.deleteLines(selectedLines)},getResult:()=>{for(var result="",i=0;i<mergeResult.length;i++)"@empty@"!==mergeResult[i]&&(result+=mergeResult[i],i!==mergeResult.length-1&&(result+=TatuDiff.getEOL(EOL)));return result},copyResult:()=>{var result=TatuDiff.getResult();vscode.postMessage({command:"copy_result",text:result})},saveResult:()=>{var result=TatuDiff.getResult();vscode.postMessage({command:"save_result",text:result})},closeWindow:()=>{vscode.postMessage({command:"close_window"})},historyBack:()=>{if(0===History.length)return!1;for(var backStep=History.pop(),index=parseInt(backStep.line),time=backStep.time,trs=document.getElementsByTagName("tr"),i=0;i<trs.length;i++)if(trs[i].rowIndex-1===index)switch(backStep.action){case"merge":TatuDiff.handleBackWardsMerge(trs[i],index),mergeResult[index]=rightLines[index];break;case"remove":trs[i].classList.remove("empty"),mergeResult[index]=rightLines[index]}History.length>0&&History[History.length-1].time===time?TatuDiff.historyBack():TatuDiff.scrollToRow(index)},handleBackWardsMerge:(row,index)=>{var cells=row.children,last=!1;row.classList.remove("merged");for(var e=0;e<cells.length;e++)"TD"===cells[e].nodeName&&(last&&("@empty@"===rightLines[index]?cells[e].innerHTML="":cells[e].innerHTML=rightLines[index].replace(/\t/g,"    ").replace(/</g,"&lt;").replace(/>/g,"&gt;"),mergeResult[index]=rightLines[index]),last=!0)},getTimeString:()=>{let date=new Date;return date.getDay().toString()+date.getHours().toString()+date.getMinutes().toString()+date.getSeconds().toString()+date.getMilliseconds().toString()},enableButtons:()=>{let mergeLines=document.getElementById("merge_lines"),deleteLines=document.getElementById("delete_lines");mergeLines.disabled=!1,deleteLines.disabled=!1},disableButtons:()=>{let mergeLines=document.getElementById("merge_lines"),deleteLines=document.getElementById("delete_lines");mergeLines.disabled=!0,deleteLines.disabled=!0},keyDownHandler:event=>{(67===event.keyCode&&event.ctrlKey||67===event.keyCode&&event.metaKey)&&(event.preventDefault(),TatuDiff.copySelected()),(event.ctrlKey||event.metaKey)&&83===event.keyCode&&(event.preventDefault(),TatuDiff.saveResult()),40!==event.keyCode||event.shiftKey||(event.preventDefault(),TatuDiff.scrollToNext()),38!==event.keyCode||event.shiftKey||(event.preventDefault(),TatuDiff.scrollToPrev()),39!==event.keyCode||event.shiftKey||(event.preventDefault(),TatuDiff.mergeSelected()),8!==event.keyCode||event.shiftKey||(event.preventDefault(),TatuDiff.deleteSelected()),27!==event.keyCode||event.shiftKey||(event.preventDefault(),TatuDiff.closeWindow()),90===event.keyCode&&(event.ctrlKey||event.metaKey)&&(event.preventDefault(),TatuDiff.historyBack())},setButtonListners:()=>{let scrollToPrev=document.getElementById("scroll_to_prev"),scrollToNext=document.getElementById("scroll_to_next"),mergeLines=document.getElementById("merge_lines"),deleteLines=document.getElementById("delete_lines"),copyResult=document.getElementById("copy_result"),saveResult=document.getElementById("save_result");scrollToPrev.addEventListener("click",TatuDiff.scrollToPrev),scrollToNext.addEventListener("click",TatuDiff.scrollToNext),mergeLines.addEventListener("click",TatuDiff.mergeSelected),deleteLines.addEventListener("click",TatuDiff.deleteSelected),copyResult.addEventListener("click",TatuDiff.copyResult),saveResult.addEventListener("click",TatuDiff.saveResult)}};window.addEventListener("keydown",(function(event){TatuDiff.keyDownHandler(event)}));